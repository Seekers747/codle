@page "/"
@using CodleLeaderboardDb.Model
@using Microsoft.EntityFrameworkCore
@using MiniGameVisual.Services
@using MiniGameVisual.Components.Elements
@rendermode InteractiveServer
@inject IGameSessionService GameSessionService

<PageTitle>Home</PageTitle>

<div class="Codle" @ref="CodleResetFix" @onkeydown="OnPhysicalKeyboardClick" tabindex="0">
    <div class="TopPageTitle">
        <h1 class="CodleTitleStyling">Codle</h1>
        <h3 class="CodleSubtitleStyling">A software development related version of wordle</h3>
    </div>
    <GameGrid Grid="@grid" GridStyles="@gridStyles"/>
    <div class="TopPageTitle PositionMessage">
        <h3 class="CodleMessageNotice">@((MarkupString)codle.Message)</h3>
    </div>
    <div class="TopPageTitle PositionExplanation">
        <h1 class="CodleTitleStyling">The meaning</h1>
        <h3 class="CodleSubtitleStyling">
            @(codle.GameOver ? codle.CodleWordExplain : "The meaning of the word will be shown after the game is over.")
        </h3>
    </div>
    <div class="TopPageTitle PositionTimer">
        <h3 class="CodleSubtitleStyling">Elapsed time in seconds: @elapsedSeconds</h3>
    </div>
    <Leaderboard LeaderboardList="@leaderboard"/>
    <button 
        class="RestartGameButton" 
        @onclick="RestartGame"
        disabled="@IsRestartBlocked">
        Restart game
    </button>
    @if (showPopup)
    {
        <div class="popup-overlay">
            <div class="popup-box">
                <label>Click on the word that you want the bot to guess</label>
                <div class="allowed-words-box">
                    <ul>
                        @foreach (var word in allowedWords)
                        {
                            <button @onclick="() => SubmitUserSelectedWord(word)">@word</button>
                        }
                    </ul>
                </div>
                <button @onclick="ClosePopup">Close</button>
            </div>
        </div>
    }
    <button class="LetComputerPlay" @onclick="OpenPopup">Let computer play</button>
    @if (ShowUsernameInputPopup)
    {
        <div class="popup-overlay">
            <div class="popup-box">
                <label for="playerName">Enter your name (max 20 characters):</label>
                <input class="nameinput-popup" id="playerName" @bind="playerName" maxlength="20" />
                <button @onclick="SubmitPlayerName">Submit</button>
            </div>
        </div>
    }
    <section class="VisibleKeyboard" aria-label="On-screen keyboard">
        <div class="VisibleKeyboardRow">
            @foreach (var letter in TopRowVisibleKeyboard)
            {
                <button 
                    class="KeyboardButton @LetterColorChange(letter)" 
                    @onclick="() => OnVisibleKeyboardClick(letter)">
                    @letter
                </button>
            }
        </div>
        <div class="VisibleKeyboardRow">
            @foreach (var letter in MiddleRowVisibleKeyboard)
            {
                <button 
                    class="KeyboardButton @LetterColorChange(letter)" 
                    @onclick="() => OnVisibleKeyboardClick(letter)">
                    @letter
                </button>
            }
        </div>
        <div class="VisibleKeyboardRow">
            @foreach (var letter in BottomRowVisibleKeyboard)
            {
                <button 
                    class="KeyboardButton @LetterColorChange(letter)" 
                    @onclick="() => OnVisibleKeyboardClick(letter)">
                    @letter
                </button>
            }
        </div>
    </section>
</div>
@code {
    protected override async Task OnInitializedAsync()
    {
        await RefreshLeaderboardAsync();
    }
}